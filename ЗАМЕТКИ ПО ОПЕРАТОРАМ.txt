ОПЕРАТОР

assert-выполняется на этапе отладки программы,
проверяет совпадение результата работы программы с условим заложенным в assert
например
что в резульате переменная a=180
записывается: assуert a==180 в противном случае вернется ошибка
-------------------------------------------------------------------------------------

ZIP -склеивает, конкатенирует списки, варианты использования
например 
number1=[1, 4, 8]
numder2=[3, 7, 20]
number1_2= list(zip(number1, number2))
print(number1_2) # [(1,3), (4,7), (8,20)]
Использование на лету

for digit1, digit2 in zip(number1, number2):
передает в digit1 значение из первого списка под соответствующим индексом
и в digit2 значение из второго списка под тем же индексом
#####отдельно почитать про генераторы (списков-?)
----------------------------------------------------------------------------------------
raise(оператор или инструкция) кинуть исключение-программа завершает работы и возвращает пользвателю исключени
т.е работа программы не продолажается если raise срабатывает
например проверить что все обьекты списка числа
for x in [1, 3, 5, 7, d]:
    if not x isdigit:
      raise Exception("list not only digit", "присутствует так же: ", x)
-------------------------------------------------------------------
isinstans
проверяет что все элементы требуемого типа.
список списков a=[[1, 2], [3.14, 4], [8, t], 3]
for x in a:
   if not isinstans(x,list): # проверим условие что х действительно список. если нет кинем исключение rise
      raise Exception("список списков а состои не только из списков но и из: ", x)  #тут работа программы завершается 
----------------------------------------------------------------------------------------------------------------------------
enumerate
примененная к списку выводит например сводную комбинацию из порядкового номера и элемента списка.
a = list(z for z in(1, 30, 50 ,70,100))
for i in enumerate(a):
  print(i)
##
(0, 1)
(1, 30)
(2, 50)
(3, 70)
(4, 100)
----------------------------------------------------------------------

ПОДСТАНОВКИ!!!!!
оператор подстановки % можно использовать в print,возможно еще где-то
в выводе на место оператора подстановки вставляется результат выражения или
переменной указанной в выражении для подстановки согласно порядку записей через запятую.
в строке знак % указывает куда вставлять, после строки знак % определяет что вставлять и в каком порядке
PS: %s-означает вставить строку,%.5s означает вставить первые 5 символов результата выражения ,%.2f означает вставть float число с точностью до второго знака


umount_summ=10000
currancy_rate={'EUR':72.97, 'USD':64.8, 'GBP':85.93}
for correancy in currancy_rate:
    print('Из %s рублей получим местной %s валюты %.2f' %(umount_summ,correancy,umount_summ/currancy_rate[correancy]))
------------------------------------------------------------------------------------------------------------------------------------------------------------------
ПЕРЕСЕЧЕНИЕ МНОЖЕСТВ
set(),операторы & и |


